{"ast":null,"code":"var _jsxFileName = \"/home/dulinag/final-project-client/src/components/views/AllStudentsView.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Button, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    backgroundImage: 'linear-gradient(to bottom right, #6a11cb, #2575fc)',\n    color: '#ffffff',\n    textAlign: 'center',\n    overflow: 'auto'\n  },\n  header: {\n    marginTop: '20px' // Additional space at the top\n  },\n\n  cardsContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    width: '100%',\n    padding: '20px 0' // Padding instead of margin for spacing inside the container\n  },\n\n  studentContainer: {\n    width: '30%',\n    maxWidth: '300px',\n    margin: '10px',\n    padding: '10px',\n    backgroundColor: '#e3e6f0',\n    borderRadius: '5px',\n    paddingBottom: '5px',\n    boxShadow: '0px 2px 5px rgba(0, 0, 0, 0.15)'\n  },\n  studentName: {\n    fontSize: '1.2rem',\n    color: '#2a2f45',\n    marginBottom: '10px'\n  }\n}));\nconst AllStudentsView = props => {\n  _s();\n  const classes = useStyles();\n  const {\n    students,\n    deleteStudent\n  } = props;\n  const [editFormData, setEditFormData] = useState(null);\n  const [errors, setErrors] = useState({});\n  const [studentErrors, setStudentErrors] = useState({});\n  const handleEditSubmit = async (e, studentId) => {\n    e.preventDefault();\n    const studentData = editFormData;\n    const errors = {};\n\n    // Validation checks\n    if (studentData.gpa < 0 || studentData.gpa > 4) {\n      errors.gpa = 'GPA must be between 0 and 4.';\n    }\n    if (!studentData.imageUrl.endsWith('.jpg')) {\n      errors.imageUrl = 'Image URL must end with .jpg.';\n    }\n    if (!studentData.email.endsWith('.com')) {\n      errors.email = 'Email must end with .com.';\n    }\n\n    // Check if Campus ID exists\n    try {\n      const campusIdExists = await checkCampusIdExists(studentData.campusId);\n      if (!campusIdExists) {\n        errors.campusId = 'Campus ID does not exist.';\n      }\n    } catch (error) {\n      console.error('Error checking Campus ID existence:', error);\n      errors.campusId = 'Error checking Campus ID existence.';\n    }\n    setStudentErrors({\n      [studentId]: errors\n    });\n    if (Object.keys(errors).length === 0) {\n      try {\n        const response = await fetch(`/api/students/${studentId}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(studentData)\n        });\n        if (!response.ok) {\n          throw new Error('Failed to update student.');\n        }\n        const updatedStudent = await response.json();\n        console.log('Student updated:', updatedStudent);\n        // Clear edit form data\n        setEditFormData(null);\n        window.location.reload();\n      } catch (error) {\n        console.error('Error updating student:', error.message);\n      }\n    }\n  };\n  const checkCampusIdExists = async campusId => {\n    try {\n      const response = await fetch(`/api/campuses/${campusId}`, {\n        method: 'GET'\n      });\n      if (response.status === 404) {\n        return false; //CampusId does not exist\n      }\n\n      const data = await response.json();\n      return !!data; //Return true if capusId exists\n    } catch (error) {\n      console.error('Error checking campus ID:', error);\n      return false; //Return false in case of an error\n    }\n  };\n\n  const renderEditForm = student => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleEditSubmit(e, student.id),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstname\",\n            children: \"First Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"firstname\",\n            name: \"firstname\",\n            defaultValue: student.firstname,\n            onChange: e => setEditFormData({\n              ...editFormData,\n              firstname: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lastname\",\n            children: \"Last Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"lastname\",\n            name: \"lastname\",\n            defaultValue: student.lastname,\n            onChange: e => setEditFormData({\n              ...editFormData,\n              lastname: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            defaultValue: student.email,\n            onChange: e => setEditFormData({\n              ...editFormData,\n              email: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 11\n          }, this), studentErrors[student.id] && studentErrors[student.id].email && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: studentErrors[student.id].email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 76\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"imageUrl\",\n            children: \"Image URL:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"imageUrl\",\n            name: \"imageUrl\",\n            defaultValue: student.imageUrl,\n            onChange: e => setEditFormData({\n              ...editFormData,\n              imageUrl: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 11\n          }, this), studentErrors[student.id] && studentErrors[student.id].imageUrl && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: studentErrors[student.id].imageUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 79\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"gpa\",\n            children: \"GPA:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"gpa\",\n            name: \"gpa\",\n            defaultValue: student.gpa,\n            onChange: e => setEditFormData({\n              ...editFormData,\n              gpa: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 11\n          }, this), studentErrors[student.id] && studentErrors[student.id].gpa && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: studentErrors[student.id].gpa\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 74\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"campusID\",\n            children: \"Campus ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"campusID\",\n            name: \"campusID\",\n            defaultValue: student.campusId,\n            onChange: e => setEditFormData({\n              ...editFormData,\n              campusId: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 9\n          }, this), studentErrors[student.id] && studentErrors[student.id].campusId && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: studentErrors[student.id].campusId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 77\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleCancelEdit(student.id),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }, this)]\n    }, student.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }, this);\n  };\n\n  // Function to handle canceling the edit form\n  const handleCancelEdit = studentId => {\n    // Reset editFormData to null\n    setEditFormData(null);\n    // Clear any error messages for this student\n    setStudentErrors(prevErrors => ({\n      ...prevErrors,\n      [studentId]: {}\n    }));\n  };\n  if (!students.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"There are no students.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `newstudent`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Add New Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 5\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      className: classes.header,\n      children: \"All Students\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/newstudent`,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Add New Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.cardsContainer,\n      children: [students.map(student => {\n        let name = student.firstname + \" \" + student.lastname;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.studentContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.studentName,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/student/${student.id}`,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            onClick: () => setEditFormData(student),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            onClick: () => deleteStudent(student.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this), editFormData && editFormData.id === student.id && renderEditForm(student), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 40\n          }, this), errors.imageUrl && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: errors.imageUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 43\n          }, this), errors.gpa && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: errors.gpa\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 38\n          }, this), errors.campusId && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: errors.campusId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 43\n          }, this)]\n        }, student.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/newstudent`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Add New Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n_s(AllStudentsView, \"jOfBOATlCrnKL/Fd+rkiJPZReUk=\", false, function () {\n  return [useStyles];\n});\n_c = AllStudentsView;\nexport default AllStudentsView;\nvar _c;\n$RefreshReg$(_c, \"AllStudentsView\");","map":{"version":3,"names":["React","useState","Link","Button","Typography","makeStyles","useStyles","theme","root","height","display","flexDirection","alignItems","backgroundImage","color","textAlign","overflow","header","marginTop","cardsContainer","flexWrap","justifyContent","width","padding","studentContainer","maxWidth","margin","backgroundColor","borderRadius","paddingBottom","boxShadow","studentName","fontSize","marginBottom","AllStudentsView","props","classes","students","deleteStudent","editFormData","setEditFormData","errors","setErrors","studentErrors","setStudentErrors","handleEditSubmit","e","studentId","preventDefault","studentData","gpa","imageUrl","endsWith","email","campusIdExists","checkCampusIdExists","campusId","error","console","Object","keys","length","response","fetch","method","headers","body","JSON","stringify","ok","Error","updatedStudent","json","log","window","location","reload","message","status","data","renderEditForm","student","id","firstname","target","value","lastname","handleCancelEdit","prevErrors","map","name"],"sources":["/home/dulinag/final-project-client/src/components/views/AllStudentsView.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Button, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    backgroundImage: 'linear-gradient(to bottom right, #6a11cb, #2575fc)',\n    color: '#ffffff',\n    textAlign: 'center',\n    overflow: 'auto',\n  },\n  header: {\n    marginTop: '20px', // Additional space at the top\n  },\n  cardsContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    width: '100%',\n    padding: '20px 0', // Padding instead of margin for spacing inside the container\n  },\n  studentContainer: {\n    width: '30%',\n    maxWidth: '300px',\n    margin: '10px',\n    padding: '10px',\n    backgroundColor: '#e3e6f0',\n    borderRadius: '5px',\n    paddingBottom: '5px',\n    boxShadow: '0px 2px 5px rgba(0, 0, 0, 0.15)',\n  },\n  studentName: {\n    fontSize: '1.2rem',\n    color: '#2a2f45',\n    marginBottom: '10px',\n  },\n}));\n\nconst AllStudentsView = (props) => {\n  const classes = useStyles();\n\n  const { students, deleteStudent } = props;\n  \n  const [editFormData, setEditFormData] = useState(null);\n  const [errors, setErrors] = useState({});\n  const [studentErrors, setStudentErrors] = useState({});\n\n\nconst handleEditSubmit = async (e, studentId) => {\n  e.preventDefault();\n\n  const studentData = editFormData;\n  const errors = {};\n\n  // Validation checks\n  if (studentData.gpa < 0 || studentData.gpa > 4) {\n    errors.gpa = 'GPA must be between 0 and 4.';\n  }\n  if (!studentData.imageUrl.endsWith('.jpg')) {\n    errors.imageUrl = 'Image URL must end with .jpg.';\n  }\n  if (!studentData.email.endsWith('.com')) {\n    errors.email = 'Email must end with .com.';\n  }\n\n// Check if Campus ID exists\ntry {\n  const campusIdExists = await checkCampusIdExists(studentData.campusId);\n  if (!campusIdExists) {\n    errors.campusId = 'Campus ID does not exist.';\n  }\n} catch (error) {\n  console.error('Error checking Campus ID existence:', error);\n  errors.campusId = 'Error checking Campus ID existence.';\n}\n\n\n  setStudentErrors({ [studentId]: errors });\n\n  \n  if (Object.keys(errors).length === 0) {\n    try {\n      const response = await fetch(`/api/students/${studentId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(studentData),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to update student.');\n      }\n\n      const updatedStudent = await response.json();\n      console.log('Student updated:', updatedStudent);\n      // Clear edit form data\n      setEditFormData(null);\n\n      window.location.reload();\n    } catch (error) {\n      console.error('Error updating student:', error.message);\n\n    }\n  }\n};\n\n\n\n\nconst checkCampusIdExists = async (campusId) => {\n  try {\n    const response = await fetch(`/api/campuses/${campusId}`, {\n      method: 'GET',\n    });\n\n    if (response.status === 404) {\n      return false; //CampusId does not exist\n    }\n\n    const data = await response.json();\n    return !!data; //Return true if capusId exists\n  } catch (error) {\n    console.error('Error checking campus ID:', error);\n    return false; //Return false in case of an error\n  }\n};\n\n\n\nconst renderEditForm = (student) => {\n  return (\n    <div key={student.id}>\n      <h2>Edit Student</h2>\n      <form onSubmit={(e) => handleEditSubmit(e, student.id)}>\n        <div>\n          <label htmlFor=\"firstname\">First Name:</label>\n          <input type=\"text\" id=\"firstname\" name=\"firstname\" defaultValue={student.firstname} onChange={(e) => setEditFormData({ ...editFormData, firstname: e.target.value })} />\n        </div>\n        <div>\n          <label htmlFor=\"lastname\">Last Name:</label>\n          <input type=\"text\" id=\"lastname\" name=\"lastname\" defaultValue={student.lastname} onChange={(e) => setEditFormData({ ...editFormData, lastname: e.target.value })} />\n        </div>\n        <div>\n          <label htmlFor=\"email\">Email:</label>\n          <input type=\"email\" id=\"email\" name=\"email\" defaultValue={student.email} onChange={(e) => setEditFormData({ ...editFormData, email: e.target.value })} />\n          {studentErrors[student.id] && studentErrors[student.id].email && <span style={{ color: 'red' }}>{studentErrors[student.id].email}</span>}\n        </div>\n        <div>\n          <label htmlFor=\"imageUrl\">Image URL:</label>\n          <input type=\"text\" id=\"imageUrl\" name=\"imageUrl\" defaultValue={student.imageUrl} onChange={(e) => setEditFormData({ ...editFormData, imageUrl: e.target.value })} />\n          {studentErrors[student.id] && studentErrors[student.id].imageUrl && <span style={{ color: 'red' }}>{studentErrors[student.id].imageUrl}</span>}\n        </div>\n        <div>\n          <label htmlFor=\"gpa\">GPA:</label>\n          <input type=\"number\" id=\"gpa\" name=\"gpa\" defaultValue={student.gpa} onChange={(e) => setEditFormData({ ...editFormData, gpa: e.target.value })} />\n          {studentErrors[student.id] && studentErrors[student.id].gpa && <span style={{ color: 'red' }}>{studentErrors[student.id].gpa}</span>}\n        </div>\n        <div>\n        <label htmlFor=\"campusID\">Campus ID:</label>\n        <input type=\"text\" id=\"campusID\" name=\"campusID\" defaultValue={student.campusId} onChange={(e) => setEditFormData({ ...editFormData, campusId: e.target.value })} />\n        {studentErrors[student.id] && studentErrors[student.id].campusId && <span style={{ color: 'red' }}>{studentErrors[student.id].campusId}</span>}\n      </div>\n        <button type=\"submit\">Submit</button>\n        {/* <button type=\"button\" onClick={() => setEditFormData(null)}>Cancel</button> */}\n        <button type=\"button\" onClick={() => handleCancelEdit(student.id)}>Cancel</button>\n      </form>\n    </div>\n  );\n};\n\n\n// Function to handle canceling the edit form\nconst handleCancelEdit = (studentId) => {\n  // Reset editFormData to null\n  setEditFormData(null);\n  // Clear any error messages for this student\n  setStudentErrors((prevErrors) => ({ ...prevErrors, [studentId]: {} }));\n};\n\n\n\n\nif (!students.length) {\n  return (\n    <div>\n      <p>There are no students.</p>\n      <Link to={`newstudent`}>\n        <button>Add New Student</button>\n      </Link>\n    </div>\n  );\n}\n\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h3\" className={classes.header}>All Students</Typography>\n      <Link to={`/newstudent`}>\n        <Button variant=\"contained\" color=\"primary\">Add New Student</Button>\n      </Link>\n      <div className={classes.cardsContainer}>\n        {students.map((student) => {\n          let name = student.firstname + \" \" + student.lastname;\n          return (\n            <div key={student.id} className={classes.studentContainer}>\n              <div className={classes.studentName}>\n                  <Link to={`/student/${student.id}`}>\n                    <Typography variant=\"h6\">{name}</Typography>\n                  </Link>\n\n                        </div>\n                        <Button\n                          variant=\"contained\"\n                          color=\"secondary\"\n                          onClick={() => setEditFormData(student)}\n                        >\n                          Edit\n                        </Button>\n\n                        <Button\n                          variant=\"contained\"\n                          color=\"secondary\"\n                          onClick={() => deleteStudent(student.id)}\n                        >\n                          Delete\n                        </Button>\n\n\n\n                        <hr />\n                      {editFormData && editFormData.id === student.id && renderEditForm(student)}\n                      {errors.email && <span style={{ color: 'red' }}>{errors.email}</span>}\n                      {errors.imageUrl && <span style={{ color: 'red' }}>{errors.imageUrl}</span>}\n                      {errors.gpa && <span style={{ color: 'red' }}>{errors.gpa}</span>}\n                      {errors.campusId && <span style={{ color: 'red' }}>{errors.campusId}</span>}\n\n                      </div>\n\n              );\n            })}\n                  <br />\n          <Link to={`/newstudent`}>\n            <button>Add New Student</button>\n          </Link>\n          <br /><br />\n\n\n      </div>\n    </div>\n  );\n};\n\nexport default AllStudentsView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/dulinag/final-project-client/src/components/views/AllCampusesView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams, Link } from 'react-router-dom';\nimport { Typography, Card, CardContent, CardMedia, Grid, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    backgroundColor: '#f5f5f5'\n  },\n  media: {\n    height: 200\n  },\n  card: {\n    margin: theme.spacing(2)\n  }\n}));\nconst SingleCampusView = _ref => {\n  _s();\n  let {\n    fetchCampusDetails\n  } = _ref;\n  const classes = useStyles();\n  const {\n    campusId\n  } = useParams();\n  const [campus, setCampus] = useState(null);\n  const [students, setStudents] = useState([]);\n  useEffect(() => {\n    fetchCampusDetails(campusId).then(data => {\n      setCampus(data.campus);\n      setStudents(data.students);\n    });\n  }, [campusId, fetchCampusDetails]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [campus && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: campus.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          className: classes.media,\n          image: campus.imageUrl || 'https://placekitten.com/400/200',\n          title: campus.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: campus.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: campus.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Students\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: students.map(student => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.card,\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                children: student.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: student.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/student/${student.id}`,\n                children: \"View Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this)\n        }, student.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), students.length === 0 && /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"No students are currently registered to this campus.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true), !campus && /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(SingleCampusView, \"ZQ3M8GMnBb287ddPXpb7u6A3LG4=\", false, function () {\n  return [useStyles, useParams];\n});\n_c = SingleCampusView;\nSingleCampusView.propTypes = {\n  fetchCampusDetails: PropTypes.func.isRequired\n};\nexport default SingleCampusView;\nvar _c;\n$RefreshReg$(_c, \"SingleCampusView\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","useParams","Link","Typography","Card","CardContent","CardMedia","Grid","Button","makeStyles","useStyles","theme","root","flexGrow","padding","spacing","backgroundColor","media","height","card","margin","SingleCampusView","fetchCampusDetails","classes","campusId","campus","setCampus","students","setStudents","then","data","name","imageUrl","description","address","map","student","email","id","length","propTypes","func","isRequired"],"sources":["/home/dulinag/final-project-client/src/components/views/AllCampusesView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams, Link } from 'react-router-dom';\nimport { Typography, Card, CardContent, CardMedia, Grid, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    backgroundColor: '#f5f5f5',\n  },\n  media: {\n    height: 200,\n  },\n  card: {\n    margin: theme.spacing(2),\n  },\n}));\n\nconst SingleCampusView = ({ fetchCampusDetails }) => {\n  const classes = useStyles();\n  const { campusId } = useParams();\n  const [campus, setCampus] = useState(null);\n  const [students, setStudents] = useState([]);\n\n  useEffect(() => {\n    fetchCampusDetails(campusId).then(data => {\n      setCampus(data.campus);\n      setStudents(data.students);\n    });\n  }, [campusId, fetchCampusDetails]);\n\n  return (\n    <div className={classes.root}>\n      {campus && (\n        <>\n          <Typography variant=\"h3\">{campus.name}</Typography>\n          <Card>\n            <CardMedia\n              className={classes.media}\n              image={campus.imageUrl || 'https://placekitten.com/400/200'}\n              title={campus.name}\n            />\n            <CardContent>\n              <Typography variant=\"body1\">{campus.description}</Typography>\n              <Typography variant=\"body2\">{campus.address}</Typography>\n            </CardContent>\n          </Card>\n          <Typography variant=\"h4\">Students</Typography>\n          <Grid container spacing={2}>\n            {students.map(student => (\n              <Grid item xs={12} sm={6} md={4} key={student.id}>\n                <Card className={classes.card}>\n                  <CardContent>\n                    <Typography variant=\"h5\">{student.name}</Typography>\n                    <Typography variant=\"body1\">{student.email}</Typography>\n                    <Link to={`/student/${student.id}`}>View Details</Link>\n                  </CardContent>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n          {students.length === 0 && <Typography>No students are currently registered to this campus.</Typography>}\n        </>\n      )}\n      {!campus && <Typography>Loading...</Typography>}\n    </div>\n  );\n};\n\nSingleCampusView.propTypes = {\n  fetchCampusDetails: PropTypes.func.isRequired,\n};\n\nexport default SingleCampusView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
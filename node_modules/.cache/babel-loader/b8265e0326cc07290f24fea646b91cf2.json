{"ast":null,"code":"var _jsxFileName = \"/home/dulinag/final-project-client/src/components/views/AllCampusesView.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n/*==================================================\nAllCampusesView.js\n\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\nIt constructs a React component to display all campuses.\n================================================== */\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundImage: 'linear-gradient(to bottom right, #6a11cb, #2575fc)',\n    color: '#ffffff',\n    textAlign: 'center',\n    overflow: 'hidden'\n  },\n  reet: {\n    justifyContent: 'center',\n    backgroundImage: 'linear-gradient(to bottom right, #6a11cb, #2575fc)',\n    color: '#ffffff',\n    // White text color\n    textAlign: 'center',\n    overflow: 'hidden',\n    // Hide overflowing content\n    color: \"white\"\n  },\n  studentContainer: {\n    width: '80%',\n    // Manageable width for each student container\n    maxWidth: '600px',\n    // Maximum width to keep the UI clean\n    margin: '20px auto',\n    // Centering and spacing vertically\n    padding: '10px',\n    backgroundColor: '#e3e6f0',\n    // Light gray background for each student\n    borderRadius: '5px',\n    boxShadow: '0px 2px 5px rgba(0, 0, 0, 0.15)',\n    textAlign: 'center',\n    // Center text elements within the student container\n    color: \"black\",\n    marginBottom: theme.spacing(2) // Adjust margin for the campus container\n  },\n\n  studentName: {\n    fontSize: '1.2rem',\n    color: '#2a2f45',\n    marginBottom: '10px'\n  }\n}));\n\n//----------------------------------------------Edit campus form-------------------------//\nconst EditCampusForm = _ref => {\n  _s();\n  let {\n    onSubmit,\n    onCancel,\n    campus\n  } = _ref;\n  console.log(\"EditCampusForm running\");\n  const [formData, setFormData] = useState({\n    id: campus.id,\n    name: campus.name,\n    address: campus.address,\n    description: campus.description,\n    imageUrl: campus.imageUrl\n  });\n  const [errors, setErrors] = useState({\n    imageUrl: \"\"\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n\n    // Reset error message when user starts typing\n    setErrors(prevErrors => ({\n      ...prevErrors,\n      [name]: \"\"\n    }));\n  };\n  const validate = () => {\n    let isValid = true;\n    const newErrors = {};\n\n    // Validate name field\n    if (!formData.name.trim()) {\n      newErrors.name = \"Name is required\";\n      isValid = false;\n    }\n\n    // Validate address field\n    if (!formData.address.trim()) {\n      newErrors.address = \"Address is required\";\n      isValid = false;\n    }\n\n    // Validate description field\n    if (!formData.description.trim()) {\n      newErrors.description = \"Description is required\";\n      isValid = false;\n    }\n\n    // Validate imageURL field\n    if (!formData.imageUrl.trim()) {\n      newErrors.imageUrl = \"Image URL is required\";\n      isValid = false;\n    } else if (!formData.imageUrl.endsWith(\".jpg\")) {\n      newErrors.imageUrl = \"Image URL must end with .jpg\";\n      isValid = false;\n    }\n    setErrors(newErrors);\n    return isValid;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validate()) {\n      onSubmit(formData);\n    }\n  };\n  const handleCancel = () => {\n    onCancel();\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    style: {\n      border: \"1px solid #ccc\",\n      padding: \"20px\",\n      marginBottom: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Campus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), errors.name && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"address\",\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"address\",\n          name: \"address\",\n          value: formData.address,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), errors.address && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: errors.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          name: \"description\",\n          value: formData.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), errors.description && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: errors.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"imageUrl\",\n          children: \"Image URL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"imageUrl\",\n          name: \"imageUrl\",\n          value: formData.imageUrl,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), errors.imageUrl && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: errors.imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n\n//----------------------------------------------Add campus form-------------------------//\n_s(EditCampusForm, \"HTjv8GVGLonVeE/c4drCjglk/Zg=\");\n_c = EditCampusForm;\nconst AddCampusForm = _ref2 => {\n  _s2();\n  let {\n    onSubmit\n  } = _ref2;\n  const [formData, setFormData] = useState({\n    name: \"\",\n    address: \"\",\n    description: \"\",\n    imageUrl: \"\"\n  });\n  const [errors, setErrors] = useState({\n    imageUrl: \"\"\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n\n    // Reset error message when user starts typing\n    setErrors(prevErrors => ({\n      ...prevErrors,\n      [name]: \"\"\n    }));\n  };\n  const validate = () => {\n    let isValid = true;\n    const newErrors = {};\n\n    // Validate name field\n    if (!formData.name.trim()) {\n      newErrors.name = \"Name is required\";\n      isValid = false;\n    }\n\n    // Validate address field\n    if (!formData.address.trim()) {\n      newErrors.address = \"Address is required\";\n      isValid = false;\n    }\n\n    // Validate description field\n    if (!formData.description.trim()) {\n      newErrors.description = \"Description is required\";\n      isValid = false;\n    }\n\n    // Validate imageURL field\n    if (!formData.imageUrl.trim()) {\n      newErrors.imageUrl = \"Image URL is required\";\n      isValid = false;\n    } else if (!formData.imageUrl.endsWith(\".jpg\")) {\n      newErrors.imageUrl = \"Image URL must end with .jpg\";\n      isValid = false;\n    }\n    setErrors(newErrors);\n    return isValid;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validate()) {\n      onSubmit(formData);\n\n      // Clear form fields after successful submission\n      setFormData({\n        name: \"\",\n        address: \"\",\n        description: \"\",\n        imageUrl: \"\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    style: {\n      border: \"1px solid #ccc\",\n      padding: \"20px\",\n      marginBottom: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Campus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), errors.name && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"address\",\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"address\",\n          name: \"address\",\n          value: formData.address,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), errors.address && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: errors.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          name: \"description\",\n          value: formData.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), errors.description && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: errors.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"imageUrl\",\n          children: \"Image URL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"imageUrl\",\n          name: \"imageUrl\",\n          value: formData.imageUrl,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), errors.imageUrl && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: errors.imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 5\n  }, this);\n};\n_s2(AddCampusForm, \"AQx5BjpOpoXmHMKS2Zs6D1kI9I0=\");\n_c2 = AddCampusForm;\nEditCampusForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  campus: PropTypes.object.isRequired\n};\nAddCampusForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  campus: PropTypes.object.isRequired\n};\nconst AllCampusesView = props => {\n  _s3();\n  const [editingCampus, setEditingCampus] = useState(null);\n  const handleEditCampus = id => {\n    console.log(\"Edit button clicked for campus ID:\", id);\n    // Retrieve the campus data based on ID and set it to state\n    const campus = props.allCampuses.find(campus => campus.id === id);\n    setEditingCampus(campus);\n  };\n  const handleCancelEdit = () => {\n    // Reset editingCampus state to null when canceling edit\n    setEditingCampus(null);\n  };\n  const handleAddCampus = formData => {\n    // Make a POST request to the server to add the new campus\n    fetch(\"/api/campuses\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(response => response.json()).then(data => {\n      console.log(\"New campus added:\", data);\n      // Refresh the page after adding the campus\n      window.location.reload();\n    }).catch(error => {\n      console.error(\"Error adding campus:\", error);\n    });\n  };\n  const handleDeleteCampus = id => {\n    // Function to delete campus\n    fetch(`/api/campuses/${id}`, {\n      method: \"DELETE\"\n    }).then(response => response.json()).then(data => {\n      console.log(\"Campus deleted:\", data);\n      window.location.reload();\n    }).catch(error => {\n      console.error(\"Error deleting campus:\", error);\n    });\n  };\n  const handleEditSubmit = (formData, campusId) => {\n    console.log(\"the route is running\");\n    // Make a PUT request to the server to update the campus\n    fetch(`/api/campuses/${campusId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(response => response.json()).then(data => {\n      console.log(\"Campus updated:\", data);\n      window.location.reload();\n      // Handle success, maybe redirect user or update state\n    }).catch(error => {\n      console.error(\"Error updating campus:\", error);\n    });\n  };\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.reet,\n    children: [/*#__PURE__*/_jsxDEV(AddCampusForm, {\n      onSubmit: handleAddCampus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.studentContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"All Campuses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 7\n      }, this), props.allCampuses.length ? props.allCampuses.map(campus => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/campus/${campus.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: campus.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"campus id: \", campus.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: campus.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: campus.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 13\n        }, this), editingCampus && editingCampus.id === campus.id ? /*#__PURE__*/_jsxDEV(EditCampusForm, {\n          onSubmit: formData => handleEditSubmit(formData, campus.id),\n          onCancel: handleCancelEdit,\n          campus: editingCampus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEditCampus(campus.id),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteCampus(campus.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 13\n        }, this)]\n      }, campus.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 11\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"There are no campuses.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 432,\n    columnNumber: 5\n  }, this);\n};\n\n// Validate data type of the props passed to component.\n_s3(AllCampusesView, \"mXgpH8/mIiZc0Kn8rZ9EF3ep3V4=\", false, function () {\n  return [useStyles];\n});\n_c3 = AllCampusesView;\nAllCampusesView.propTypes = {\n  allCampuses: PropTypes.array.isRequired\n};\nexport default AllCampusesView;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"EditCampusForm\");\n$RefreshReg$(_c2, \"AddCampusForm\");\n$RefreshReg$(_c3, \"AllCampusesView\");","map":{"version":3,"names":["React","useState","PropTypes","Link","Button","Typography","makeStyles","useStyles","theme","root","display","flexDirection","justifyContent","alignItems","backgroundImage","color","textAlign","overflow","reet","studentContainer","width","maxWidth","margin","padding","backgroundColor","borderRadius","boxShadow","marginBottom","spacing","studentName","fontSize","EditCampusForm","onSubmit","onCancel","campus","console","log","formData","setFormData","id","name","address","description","imageUrl","errors","setErrors","handleChange","e","value","target","prevData","prevErrors","validate","isValid","newErrors","trim","endsWith","handleSubmit","preventDefault","handleCancel","border","AddCampusForm","propTypes","func","isRequired","object","AllCampusesView","props","editingCampus","setEditingCampus","handleEditCampus","allCampuses","find","handleCancelEdit","handleAddCampus","fetch","method","headers","body","JSON","stringify","then","response","json","data","window","location","reload","catch","error","handleDeleteCampus","handleEditSubmit","campusId","classes","length","map","array"],"sources":["/home/dulinag/final-project-client/src/components/views/AllCampusesView.js"],"sourcesContent":["/*==================================================\nAllCampusesView.js\n\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\nIt constructs a React component to display all campuses.\n================================================== */\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nimport { Button, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundImage: 'linear-gradient(to bottom right, #6a11cb, #2575fc)',\n    color: '#ffffff',\n    textAlign: 'center',\n    overflow: 'hidden',\n  },  \n  reet: {\n   \n    justifyContent: 'center',\n    backgroundImage: 'linear-gradient(to bottom right, #6a11cb, #2575fc)',\n    color: '#ffffff', // White text color\n    textAlign: 'center',\n    overflow: 'hidden', // Hide overflowing content\n    color: \"white\"\n  },\n  studentContainer: {\n    width: '80%', // Manageable width for each student container\n    maxWidth: '600px', // Maximum width to keep the UI clean\n    margin: '20px auto', // Centering and spacing vertically\n    padding: '10px',\n    backgroundColor: '#e3e6f0', // Light gray background for each student\n    borderRadius: '5px',\n    boxShadow: '0px 2px 5px rgba(0, 0, 0, 0.15)',\n    textAlign: 'center', // Center text elements within the student container\n    color: \"black\",\n    marginBottom: theme.spacing(2), // Adjust margin for the campus container\n  },\n  studentName: {\n    fontSize: '1.2rem',\n    color: '#2a2f45',\n    marginBottom: '10px',\n  },\n}));\n\n\n\n\n\n\n//----------------------------------------------Edit campus form-------------------------//\nconst EditCampusForm = ({ onSubmit, onCancel, campus }) => {\n  console.log(\"EditCampusForm running\")\n  const [formData, setFormData] = useState({\n    id: campus.id,\n    name: campus.name,\n    address: campus.address,\n    description: campus.description,\n    imageUrl: campus.imageUrl,\n  });\n\n  const [errors, setErrors] = useState({\n    imageUrl: \"\",\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  \n\n    // Reset error message when user starts typing\n    setErrors((prevErrors) => ({\n      ...prevErrors,\n      [name]: \"\",\n    }));\n  };\n\n  const validate = () => {\n    let isValid = true;\n    const newErrors = {};\n  \n    // Validate name field\n    if (!formData.name.trim()) {\n      newErrors.name = \"Name is required\";\n      isValid = false;\n    }\n  \n    // Validate address field\n    if (!formData.address.trim()) {\n      newErrors.address = \"Address is required\";\n      isValid = false;\n    }\n  \n    // Validate description field\n    if (!formData.description.trim()) {\n      newErrors.description = \"Description is required\";\n      isValid = false;\n    }\n  \n    // Validate imageURL field\n    if (!formData.imageUrl.trim()) {\n      newErrors.imageUrl = \"Image URL is required\";\n      isValid = false;\n    } else if (!formData.imageUrl.endsWith(\".jpg\")) {\n      newErrors.imageUrl = \"Image URL must end with .jpg\";\n      isValid = false;\n    }\n  \n    setErrors(newErrors);\n    return isValid;\n  };\n\n\n\n  \n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (validate()) {\n      onSubmit(formData);\n    }\n  };\n\n  const handleCancel = () => {\n    onCancel();\n  };\n\n  return (\n    <section style={{ border: \"1px solid #ccc\", padding: \"20px\", marginBottom: \"20px\" }}>\n      <h2>Edit Campus</h2>\n      <form onSubmit={handleSubmit}>\n        <div style={{ marginBottom: \"10px\" }}>\n          <label htmlFor=\"name\">Name:</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            value={formData.name}\n            onChange={handleChange}\n          />\n          {errors.name && <span style={{ color: \"red\" }}>{errors.name}</span>}\n        </div>\n        <div style={{ marginBottom: \"10px\" }}>\n          <label htmlFor=\"address\">Address:</label>\n          <input\n            type=\"text\"\n            id=\"address\"\n            name=\"address\"\n            value={formData.address}\n            onChange={handleChange}\n          />\n          {errors.address && <span style={{ color: \"red\" }}>{errors.address}</span>}\n        </div>\n        <div style={{ marginBottom: \"10px\" }}>\n          <label htmlFor=\"description\">Description:</label>\n          <textarea\n            id=\"description\"\n            name=\"description\"\n            value={formData.description}\n            onChange={handleChange}\n          />\n          {errors.description && <span style={{ color: \"red\" }}>{errors.description}</span>}\n        </div>\n        <div style={{ marginBottom: \"10px\" }}>\n          <label htmlFor=\"imageUrl\">Image URL:</label>\n          <input\n            type=\"text\"\n            id=\"imageUrl\"\n            name=\"imageUrl\"\n            value={formData.imageUrl}\n            onChange={handleChange}\n          />\n          {errors.imageUrl && <span style={{ color: \"red\" }}>{errors.imageUrl}</span>}\n        </div>\n        <button type=\"submit\">Submit</button>\n        <button type=\"button\" onClick={handleCancel}>Cancel</button>\n      </form>\n    </section>\n  );\n};\n\n\n\n//----------------------------------------------Add campus form-------------------------//\nconst AddCampusForm = ({ onSubmit }) => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    address: \"\",\n    description: \"\",\n    imageUrl: \"\"\n  });\n\n  const [errors, setErrors] = useState({\n    imageUrl: \"\"\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  \n    // Reset error message when user starts typing\n    setErrors((prevErrors) => ({\n      ...prevErrors,\n      [name]: \"\",\n    }));\n  };\n\n  const validate = () => {\n    let isValid = true;\n    const newErrors = {};\n  \n    // Validate name field\n    if (!formData.name.trim()) {\n      newErrors.name = \"Name is required\";\n      isValid = false;\n    }\n  \n    // Validate address field\n    if (!formData.address.trim()) {\n      newErrors.address = \"Address is required\";\n      isValid = false;\n    }\n  \n    // Validate description field\n    if (!formData.description.trim()) {\n      newErrors.description = \"Description is required\";\n      isValid = false;\n    }\n  \n    // Validate imageURL field\n    if (!formData.imageUrl.trim()) {\n      newErrors.imageUrl = \"Image URL is required\";\n      isValid = false;\n    } else if (!formData.imageUrl.endsWith(\".jpg\")) {\n      newErrors.imageUrl = \"Image URL must end with .jpg\";\n      isValid = false;\n    }\n  \n    setErrors(newErrors);\n    return isValid;\n  };\n  \n  \n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (validate()) {\n      onSubmit(formData);\n\n      // Clear form fields after successful submission\n      setFormData({\n        name: \"\",\n        address: \"\",\n        description: \"\",\n        imageUrl: \"\"\n      });\n    }\n  };\n\n\n\n  return (\n    <section style={{ border: \"1px solid #ccc\", padding: \"20px\", marginBottom: \"20px\" }}>\n      <h2>Add Campus</h2>\n      <form onSubmit={handleSubmit}>\n        <div style={{ marginBottom: \"10px\" }}>\n          <label htmlFor=\"name\">Name:</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            value={formData.name}\n            onChange={handleChange}\n          />\n          {errors.name && <span style={{ color: \"red\" }}>{errors.name}</span>}\n        </div>\n        <div style={{ marginBottom: \"10px\" }}>\n          <label htmlFor=\"address\">Address:</label>\n          <input\n            type=\"text\"\n            id=\"address\"\n            name=\"address\"\n            value={formData.address}\n            onChange={handleChange}\n          />\n          {errors.address && <span style={{ color: \"red\" }}>{errors.address}</span>}\n        </div>\n        <div style={{ marginBottom: \"10px\" }}>\n          <label htmlFor=\"description\">Description:</label>\n          <textarea\n            id=\"description\"\n            name=\"description\"\n            value={formData.description}\n            onChange={handleChange}\n          />\n          {errors.description && <span style={{ color: \"red\" }}>{errors.description}</span>}\n        </div>\n        <div style={{ marginBottom: \"10px\" }}>\n          <label htmlFor=\"imageUrl\">Image URL:</label>\n          <input\n            type=\"text\"\n            id=\"imageUrl\"\n            name=\"imageUrl\"\n            value={formData.imageUrl}\n            onChange={handleChange}\n          />\n          {errors.imageUrl && <span style={{ color: \"red\" }}>{errors.imageUrl}</span>}\n        </div>\n        <button type=\"submit\">Submit</button>\n      </form>\n    </section>\n  );\n};\n\n\nEditCampusForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  campus: PropTypes.object.isRequired,\n};\n\n\n\nAddCampusForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  campus: PropTypes.object.isRequired,\n};\n\n\n\nconst AllCampusesView = (props) => {\n\n  const [editingCampus, setEditingCampus] = useState(null);\n\n  const handleEditCampus = (id) => {\n    console.log(\"Edit button clicked for campus ID:\", id);\n    // Retrieve the campus data based on ID and set it to state\n    const campus = props.allCampuses.find((campus) => campus.id === id);\n    setEditingCampus(campus);\n  };\n  const handleCancelEdit = () => {\n    // Reset editingCampus state to null when canceling edit\n    setEditingCampus(null);\n  };\n\n\n  const handleAddCampus = (formData) => {\n    // Make a POST request to the server to add the new campus\n    fetch(\"/api/campuses\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(formData),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"New campus added:\", data);\n        // Refresh the page after adding the campus\n        window.location.reload();\n      })\n      .catch((error) => {\n        console.error(\"Error adding campus:\", error);\n      });\n  };\n\n  const handleDeleteCampus = (id) => {\n    // Function to delete campus\n    fetch(`/api/campuses/${id}`, {\n      method: \"DELETE\",\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Campus deleted:\", data);\n\n        window.location.reload();\n      })\n      .catch((error) => {\n        console.error(\"Error deleting campus:\", error);\n      });\n  };\n\n\n\n  const handleEditSubmit = (formData, campusId) => {\n    console.log(\"the route is running\");\n    // Make a PUT request to the server to update the campus\n    fetch(`/api/campuses/${campusId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(formData),\n    })\n    .then((response) => response.json())\n    .then((data) => {\n      console.log(\"Campus updated:\", data);\n      window.location.reload();\n      // Handle success, maybe redirect user or update state\n    })\n    .catch((error) => {\n      console.error(\"Error updating campus:\", error);\n    });\n  };\n  \n\n\n\n\n\n\n  const classes = useStyles();\n\n\n  return (\n    <div className={classes.reet}>\n            <AddCampusForm onSubmit={handleAddCampus} />\n\n\n    <div className={classes.studentContainer}>\n      \n      <h1>All Campuses</h1>\n      {props.allCampuses.length ? (\n        props.allCampuses.map((campus) => (\n          <div key={campus.id}>\n            <Link to={`/campus/${campus.id}`}>\n              <h2>{campus.name}</h2>\n            </Link>\n            <h4>campus id: {campus.id}</h4>\n            <p>{campus.address}</p>\n            <p>{campus.description}</p>\n\n            {editingCampus && editingCampus.id === campus.id ? (\n              <EditCampusForm onSubmit={(formData) => handleEditSubmit(formData, campus.id)} onCancel={handleCancelEdit} campus={editingCampus} />\n            ) : (\n              <>\n                <button onClick={() => handleEditCampus(campus.id)}>Edit</button>\n                <button onClick={() => handleDeleteCampus(campus.id)}>Delete</button>\n              </>\n            )}\n\n            <hr />\n          </div>\n        ))\n      ) : (\n        <div>There are no campuses.</div>\n      )}\n          </div>\n\n      <br />\n      <br /><br />\n    </div>\n  );\n};\n\n// Validate data type of the props passed to component.\nAllCampusesView.propTypes = {\n  allCampuses: PropTypes.array.isRequired,\n};\n\nexport default AllCampusesView;"],"mappings":"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"},"metadata":{},"sourceType":"module"}